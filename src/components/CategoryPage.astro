---
import Layout from './Layout.astro';
import ProjectCard from './ProjectCard.astro';
import PageHeader from './PageHeader.astro';
import { getCollection } from 'astro:content';

export interface Props {
  category: 'ai' | 'gaming' | 'research' | 'coding-misc' | 'web-dev';
  title: string;
  icon: string;
  description: string;
  pageTitle?: string;
  pageDescription?: string;
}

const { 
  category, 
  title, 
  icon, 
  description, 
  pageTitle, 
  pageDescription 
} = Astro.props;

const allProjects = await getCollection('projects');
const categoryProjects = allProjects
  .filter(project => project.data.tags.includes(category))
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

const finalPageTitle = pageTitle || `${title} - Portfolio`;
const finalPageDescription = pageDescription || `${title.toLowerCase()} projects and applications`;
---

<Layout title={finalPageTitle} description={finalPageDescription}>
  <PageHeader 
    title={title}
    icon={icon}
    description={description}
    stats={[{ label: 'projects', value: categoryProjects.length }]}
    variant="gradient"
  />

  {categoryProjects.length > 0 ? (
    <div class="projects-grid">
      {categoryProjects.map((project) => (
        <ProjectCard
          title={project.data.title}
          description={project.data.description}
          tags={project.data.tags}
          date={project.data.date}
          status={project.data.status}
          liveUrl={project.data.liveUrl}
          downloadUrl={project.data.downloadUrl}
          githubUrl={project.data.githubUrl}
          images={project.data.images}
          technologies={project.data.technologies}
          embedType={project.data.embedType}
          slug={project.slug}
          featured={project.data.featured}
        />
      ))}
    </div>
  ) : (
    <div class="empty-state">
      <div class="empty-icon">{icon}</div>
      <h3>No {title.toLowerCase()} projects yet</h3>
      <p>Check back soon for {title.toLowerCase()} projects!</p>
      <a href="/" class="back-home-btn">‚Üê Back to Home</a>
    </div>
  )}
</Layout>

<style>
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }
  
  .empty-state {
    text-align: center;
    padding: 4rem 2rem;
    color: #6b7280;
  }
  
  .empty-state .empty-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    display: block;
  }
  
  .empty-state h3 {
    margin-bottom: 0.5rem;
    color: #374151;
  }
  
  .back-home-btn {
    display: inline-block;
    margin-top: 1.5rem;
    padding: 0.75rem 1.5rem;
    background: var(--primary);
    color: var(--background);
    text-decoration: none;
    border-radius: 25px;
    font-weight: 600;
    transition: all 0.3s ease;
  }
  
  .back-home-btn:hover {
    background: var(--text);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(175, 203, 207, 0.3);
  }
  
  @media (max-width: 768px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
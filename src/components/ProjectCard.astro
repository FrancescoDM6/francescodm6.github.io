---
export interface Props {
    title: string;
    description: string;
    tags: string[];
    date: Date;
    status?: string;
    liveUrl?: string;
    downloadUrl?: string;
    githubUrl?: string;
    images?: string[];
    technologies?: string[];
    embedType?: string;
    slug: string;
    featured?: boolean;
}

const { 
    title, 
    description, 
    tags, 
    date, 
    status = 'completed',
    liveUrl,
    downloadUrl,
    githubUrl,
    images,
    technologies,
    embedType = 'none',
    slug,
    featured = false
} = Astro.props;
---

<article class="project-card" class:list={[{ featured }]}>
    {featured && <div class="featured-badge">‚≠ê Featured</div>}
    
    {images && images.length > 0 && (
        <div class="project-image">
            <img src={images[0]} alt={title} loading="lazy" />
        </div>
    )}
    
    <div class="project-content">
        <div class="project-header">
            <a href={`/projects/${slug}`} class="project-title-link">
                <h3>{title}</h3>
            </a>
            <span class={`status status-${status}`}>{status}</span>
        </div>
        
        <p class="description">{description}</p>
        
        <div class="tags">
            {tags.map((tag) => (
                <a href={`/${tag}`} class="tag">{tag}</a>
            ))}
        </div>
        
        {technologies && (
            <div class="technologies">
                <strong>Tech:</strong> {technologies.join(', ')}
            </div>
        )}
        
        <div class="project-footer">
            <div class="date">{date.toLocaleDateString()}</div>
            <div class="actions">
                {embedType !== 'none' && liveUrl && (
                    <a href={liveUrl} class="btn btn-primary" target="_blank">
                        {embedType === 'game' ? 'Play Game' : 
                         embedType === 'animation' ? 'View Animation' : 'View Demo'}
                    </a>
                )}
                {githubUrl && (
                    <a href={githubUrl} class="btn btn-secondary" target="_blank">GitHub</a>
                )}
                {downloadUrl && (
                    <a href={downloadUrl} class="btn btn-secondary" target="_blank">Download</a>
                )}
            </div>
        </div>
    </div>
</article>

<style>
    .project-card {
        background: var(--card-bg);
        border: 1px solid var(--border);
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.3s ease;
        position: relative;
        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.2);
    }
    
    .project-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3);
        border-color: var(--primary);
    }
    
    .project-card.featured {
        border-color: var(--accent);
        background: linear-gradient(135deg, var(--card-bg) 0%, rgba(124, 110, 169, 0.1) 100%);
    }
    
    .featured-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: var(--accent);
        color: var(--text);
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        z-index: 10;
        box-shadow: 0 2px 8px rgba(124, 110, 169, 0.3);
    }
    
    .project-image {
        height: 200px;
        overflow: hidden;
        position: relative;
    }

    .project-image::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(180deg, transparent 0%, rgba(13, 39, 44, 0.3) 100%);
    }
    
    .project-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .project-card:hover .project-image img {
        transform: scale(1.05);
    }
    
    .project-content {
        padding: 1.5rem;
    }
    
    .project-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
        gap: 1rem;
    }

    .project-title-link {
        text-decoration: none;
        color: inherit;
        flex: 1;
        transition: all 0.3s ease;
    }

    .project-title-link h3 {
        margin: 0;
        color: var(--text);
        font-size: 1.3rem;
        font-weight: 600;
        line-height: 1.3;
        transition: color 0.3s ease;
    }

    .project-title-link:hover h3 {
        color: var(--primary);
    }
    
    /* .project-header h3 {
        margin: 0;
        color: #1f2937;
        font-size: 1.25rem;
    } */
    
    .status {
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: capitalize;
        white-space: nowrap;
        border: 1px solid transparent;
    }
    
    .status-completed { 
        background: rgba(175, 203, 207, 0.2); 
        color: var(--primary); 
        border-color: rgba(175, 203, 207, 0.3);
    }
    .status-in-progress { 
        background: rgba(124, 110, 169, 0.2); 
        color: var(--accent); 
        border-color: rgba(124, 110, 169, 0.3);
    }
    .status-planned { 
        background: rgba(62, 66, 104, 0.3); 
        color: var(--secondary); 
        border-color: rgba(62, 66, 104, 0.4);
    }
    
    .description {
        color: rgba(220, 239, 243, 0.8);
        margin-bottom: 1rem;
        line-height: 1.6;
        font-size: 0.95rem;
    }
    
    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }
    
    .tag {
        background: rgba(175, 203, 207, 0.15);
        color: var(--primary);
        padding: 0.35rem 0.75rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.3s ease;
        border: 1px solid rgba(175, 203, 207, 0.2);
    }

    .tag:hover {
        background: rgba(175, 203, 207, 0.25);
        color: var(--text);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(175, 203, 207, 0.2);
        border-color: var(--primary);
    }
    
    .technologies {
        color: rgba(220, 239, 243, 0.7);
        font-size: 0.9rem;
        margin-bottom: 1rem;
        line-height: 1.5;
    }
    
    .technologies strong {
        color: var(--primary);
        font-weight: 600;
    }
    
    .project-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 1rem;
        border-top: 1px solid var(--border);
        gap: 1rem;
    }
    
    .date {
        color: rgba(220, 239, 243, 0.6);
        font-size: 0.9rem;
        font-weight: 500;
    }
    
    .actions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }
    
    .btn {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        text-decoration: none;
        font-size: 0.85rem;
        font-weight: 600;
        transition: all 0.3s ease;
        border: 1px solid transparent;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: fit-content;
    }

    .btn-primary {
        background: var(--primary);
        color: var(--background);
        border-color: var(--primary);
    }
    
    .btn-primary:hover {
        background: var(--text);
        box-shadow: 0 4px 12px rgba(175, 203, 207, 0.3);
        transform: translateY(-2px);
    }
    
    .btn-secondary {
        background: rgba(62, 66, 104, 0.4);
        color: var(--text);
        border-color: var(--secondary);
    }
    
    .btn-secondary:hover {
        background: var(--secondary);
        box-shadow: 0 4px 12px rgba(62, 66, 104, 0.3);
        transform: translateY(-2px);
    }

    @media (max-width: 768px) {
        .project-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.75rem;
        }
        
        .project-footer {
            flex-direction: column;
            gap: 1rem;
            align-items: flex-start;
        }
        
        .actions {
            width: 100%;
            justify-content: flex-start;
        }
        
        .btn {
            flex: 1;
            min-width: 0;
        }
    }
</style>